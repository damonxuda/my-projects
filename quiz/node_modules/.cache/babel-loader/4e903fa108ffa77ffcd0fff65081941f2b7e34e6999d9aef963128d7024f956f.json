{"ast":null,"code":"import React,{useState}from'react';import{Plus,BookOpen}from'lucide-react';import ImportForm from'./ImportForm';import ManualForm from'./ManualForm';// 临时常量定义（之后从 constants.js 导入）\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MATH_CATEGORIES=['计算','计数','几何','数论','应用题','行程','组合'];const CATEGORIES=['行程','组合','数论','几何','计算','应用题','逻辑推理','计数','其他'];const QUESTION_TYPES=['例1','例2','例3','例4','例5','习题1','习题2','习题3','习题4','习题5'];const QuestionInput=_ref=>{let{questions,setQuestions,db,addDebugInfo,showDebug}=_ref;const[showAddForm,setShowAddForm]=useState(false);const[showImportForm,setShowImportForm]=useState(false);const handleQuestionAdded=async question=>{try{const{data,error}=await db.insertQuestion(question);if(error)throw error;setQuestions([...questions,data]);setShowAddForm(false);alert('题目添加成功并保存到数据库！');if(showDebug&&addDebugInfo){addDebugInfo(\"\\u624B\\u52A8\\u6DFB\\u52A0\\u9898\\u76EE: \".concat(question.questionType));}}catch(error){console.error('添加失败:',error);alert('添加失败，请检查数据库连接');}};const handleQuestionsImported=newQuestions=>{setQuestions([...questions,...newQuestions]);setShowImportForm(false);if(showDebug&&addDebugInfo){addDebugInfo(\"\\u6279\\u91CF\\u5BFC\\u5165 \".concat(newQuestions.length,\" \\u9053\\u9898\\u76EE\"));}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2 mb-6\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowImportForm(!showImportForm),className:\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg flex items-center gap-2\",children:[/*#__PURE__*/_jsx(BookOpen,{size:20}),\"\\u667A\\u80FD\\u5BFC\\u5165\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowAddForm(!showAddForm),className:\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Plus,{size:20}),\"\\u624B\\u52A8\\u6DFB\\u52A0\"]})]}),showImportForm&&/*#__PURE__*/_jsx(ImportForm,{onQuestionsImported:handleQuestionsImported,onCancel:()=>setShowImportForm(false),existingQuestions:questions,db:db,addDebugInfo:addDebugInfo,mathCategories:MATH_CATEGORIES}),showAddForm&&/*#__PURE__*/_jsx(ManualForm,{onSubmit:handleQuestionAdded,onCancel:()=>setShowAddForm(false),categories:CATEGORIES,questionTypes:QUESTION_TYPES})]});};export default QuestionInput;","map":{"version":3,"names":["React","useState","Plus","BookOpen","ImportForm","ManualForm","jsx","_jsx","jsxs","_jsxs","MATH_CATEGORIES","CATEGORIES","QUESTION_TYPES","QuestionInput","_ref","questions","setQuestions","db","addDebugInfo","showDebug","showAddForm","setShowAddForm","showImportForm","setShowImportForm","handleQuestionAdded","question","data","error","insertQuestion","alert","concat","questionType","console","handleQuestionsImported","newQuestions","length","children","className","onClick","size","onQuestionsImported","onCancel","existingQuestions","mathCategories","onSubmit","categories","questionTypes"],"sources":["/Users/damonxu/Documents/GitHub/my-projects/quiz/src/components/QuestionInput/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Plus, BookOpen } from 'lucide-react';\nimport ImportForm from './ImportForm';\nimport ManualForm from './ManualForm';\n\n// 临时常量定义（之后从 constants.js 导入）\nconst MATH_CATEGORIES = ['计算', '计数', '几何', '数论', '应用题', '行程', '组合'];\nconst CATEGORIES = ['行程', '组合', '数论', '几何', '计算', '应用题', '逻辑推理', '计数', '其他'];\nconst QUESTION_TYPES = ['例1', '例2', '例3', '例4', '例5', '习题1', '习题2', '习题3', '习题4', '习题5'];\n\nconst QuestionInput = ({ questions, setQuestions, db, addDebugInfo, showDebug }) => {\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showImportForm, setShowImportForm] = useState(false);\n\n  const handleQuestionAdded = async (question) => {\n    try {\n      const { data, error } = await db.insertQuestion(question);\n      if (error) throw error;\n      \n      setQuestions([...questions, data]);\n      setShowAddForm(false);\n      alert('题目添加成功并保存到数据库！');\n      \n      if (showDebug && addDebugInfo) {\n        addDebugInfo(`手动添加题目: ${question.questionType}`);\n      }\n    } catch (error) {\n      console.error('添加失败:', error);\n      alert('添加失败，请检查数据库连接');\n    }\n  };\n\n  const handleQuestionsImported = (newQuestions) => {\n    setQuestions([...questions, ...newQuestions]);\n    setShowImportForm(false);\n    \n    if (showDebug && addDebugInfo) {\n      addDebugInfo(`批量导入 ${newQuestions.length} 道题目`);\n    }\n  };\n\n  return (\n    <div>\n      {/* 操作按钮 */}\n      <div className=\"flex gap-2 mb-6\">\n        <button\n          onClick={() => setShowImportForm(!showImportForm)}\n          className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg flex items-center gap-2\"\n        >\n          <BookOpen size={20} />\n          智能导入\n        </button>\n        <button\n          onClick={() => setShowAddForm(!showAddForm)}\n          className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center gap-2\"\n        >\n          <Plus size={20} />\n          手动添加\n        </button>\n      </div>\n\n      {/* 智能导入表单 */}\n      {showImportForm && (\n        <ImportForm\n          onQuestionsImported={handleQuestionsImported}\n          onCancel={() => setShowImportForm(false)}\n          existingQuestions={questions}\n          db={db}\n          addDebugInfo={addDebugInfo}\n          mathCategories={MATH_CATEGORIES}\n        />\n      )}\n\n      {/* 手动添加表单 */}\n      {showAddForm && (\n        <ManualForm\n          onSubmit={handleQuestionAdded}\n          onCancel={() => setShowAddForm(false)}\n          categories={CATEGORIES}\n          questionTypes={QUESTION_TYPES}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default QuestionInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}