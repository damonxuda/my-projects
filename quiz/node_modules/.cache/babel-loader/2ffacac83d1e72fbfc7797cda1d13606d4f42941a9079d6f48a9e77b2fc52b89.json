{"ast":null,"code":"export class WebSocketFactory{/**\n     * Dynamic require that works in both CJS and ESM environments\n     * Bulletproof against strict ESM environments where require might not be in scope\n     * @private\n     */static dynamicRequire(moduleId){try{// Check if we're in a Node.js environment first\nif(typeof process!=='undefined'&&process.versions&&process.versions.node){// In Node.js, both CJS and ESM support require for dynamic imports\n// Wrap in try/catch to handle strict ESM environments\nif(typeof require!=='undefined'){return require(moduleId);}}return null;}catch(_a){// Catches any error from typeof require OR require() call in strict ESM\nreturn null;}}static detectEnvironment(){var _a,_b;if(typeof WebSocket!=='undefined'){return{type:'native',constructor:WebSocket};}if(typeof globalThis!=='undefined'&&typeof globalThis.WebSocket!=='undefined'){return{type:'native',constructor:globalThis.WebSocket};}if(typeof global!=='undefined'&&typeof global.WebSocket!=='undefined'){return{type:'native',constructor:global.WebSocket};}if(typeof globalThis!=='undefined'&&typeof globalThis.WebSocketPair!=='undefined'&&typeof globalThis.WebSocket==='undefined'){return{type:'cloudflare',error:'Cloudflare Workers detected. WebSocket clients are not supported in Cloudflare Workers.',workaround:'Use Cloudflare Workers WebSocket API for server-side WebSocket handling, or deploy to a different runtime.'};}if(typeof globalThis!=='undefined'&&globalThis.EdgeRuntime||typeof navigator!=='undefined'&&((_a=navigator.userAgent)===null||_a===void 0?void 0:_a.includes('Vercel-Edge'))){return{type:'unsupported',error:'Edge runtime detected (Vercel Edge/Netlify Edge). WebSockets are not supported in edge functions.',workaround:'Use serverless functions or a different deployment target for WebSocket functionality.'};}if(typeof process!=='undefined'&&process.versions&&process.versions.node){const nodeVersion=parseInt(process.versions.node.split('.')[0]);if(nodeVersion>=22){try{if(typeof globalThis.WebSocket!=='undefined'){return{type:'native',constructor:globalThis.WebSocket};}const undici=this.dynamicRequire('undici');if(undici&&undici.WebSocket){return{type:'native',constructor:undici.WebSocket};}throw new Error('undici not available');}catch(err){return{type:'unsupported',error:\"Node.js \".concat(nodeVersion,\" detected but native WebSocket not found.\"),workaround:'Install the \"ws\" package or check your Node.js installation.'};}}try{// Use dynamic require to work in both CJS and ESM environments\nconst ws=this.dynamicRequire('ws');if(ws){return{type:'ws',constructor:(_b=ws.WebSocket)!==null&&_b!==void 0?_b:ws};}throw new Error('ws package not available');}catch(err){return{type:'unsupported',error:\"Node.js \".concat(nodeVersion,\" detected without WebSocket support.\"),workaround:'Install the \"ws\" package: npm install ws'};}}return{type:'unsupported',error:'Unknown JavaScript runtime without WebSocket support.',workaround:\"Ensure you're running in a supported environment (browser, Node.js, Deno) or provide a custom WebSocket implementation.\"};}static getWebSocketConstructor(){const env=this.detectEnvironment();if(env.constructor){return env.constructor;}let errorMessage=env.error||'WebSocket not supported in this environment.';if(env.workaround){errorMessage+=\"\\n\\nSuggested solution: \".concat(env.workaround);}throw new Error(errorMessage);}static createWebSocket(url,protocols){const WS=this.getWebSocketConstructor();return new WS(url,protocols);}static isWebSocketSupported(){try{const env=this.detectEnvironment();return env.type==='native'||env.type==='ws';}catch(_a){return false;}}}export default WebSocketFactory;","map":{"version":3,"names":["WebSocketFactory","dynamicRequire","moduleId","process","versions","node","require","_a","detectEnvironment","WebSocket","type","constructor","globalThis","global","WebSocketPair","error","workaround","EdgeRuntime","navigator","userAgent","includes","nodeVersion","parseInt","split","undici","Error","err","concat","ws","_b","getWebSocketConstructor","env","errorMessage","createWebSocket","url","protocols","WS","isWebSocketSupported"],"sources":["/Users/damonxu/Documents/GitHub/my-projects/auth/node_modules/@supabase/realtime-js/src/lib/websocket-factory.ts"],"sourcesContent":["export interface WebSocketLike {\n  readonly CONNECTING: number\n  readonly OPEN: number\n  readonly CLOSING: number\n  readonly CLOSED: number\n  readonly readyState: number\n  readonly url: string\n  readonly protocol: string\n\n  close(code?: number, reason?: string): void\n  send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void\n\n  onopen: ((this: any, ev: Event) => any) | null\n  onmessage: ((this: any, ev: MessageEvent) => any) | null\n  onclose: ((this: any, ev: CloseEvent) => any) | null\n  onerror: ((this: any, ev: Event) => any) | null\n\n  addEventListener(type: string, listener: EventListener): void\n  removeEventListener(type: string, listener: EventListener): void\n\n  // Add additional properties that may exist on WebSocket implementations\n  binaryType?: string\n  bufferedAmount?: number\n  extensions?: string\n  dispatchEvent?: (event: Event) => boolean\n}\n\nexport interface WebSocketEnvironment {\n  type: 'native' | 'ws' | 'cloudflare' | 'unsupported'\n  constructor?: any\n  error?: string\n  workaround?: string\n}\n\nexport class WebSocketFactory {\n  /**\n   * Dynamic require that works in both CJS and ESM environments\n   * Bulletproof against strict ESM environments where require might not be in scope\n   * @private\n   */\n  private static dynamicRequire(moduleId: string): any {\n    try {\n      // Check if we're in a Node.js environment first\n      if (\n        typeof process !== 'undefined' &&\n        process.versions &&\n        process.versions.node\n      ) {\n        // In Node.js, both CJS and ESM support require for dynamic imports\n        // Wrap in try/catch to handle strict ESM environments\n        if (typeof require !== 'undefined') {\n          return require(moduleId)\n        }\n      }\n      return null\n    } catch {\n      // Catches any error from typeof require OR require() call in strict ESM\n      return null\n    }\n  }\n\n  private static detectEnvironment(): WebSocketEnvironment {\n    if (typeof WebSocket !== 'undefined') {\n      return { type: 'native', constructor: WebSocket }\n    }\n\n    if (\n      typeof globalThis !== 'undefined' &&\n      typeof (globalThis as any).WebSocket !== 'undefined'\n    ) {\n      return { type: 'native', constructor: (globalThis as any).WebSocket }\n    }\n\n    if (\n      typeof global !== 'undefined' &&\n      typeof (global as any).WebSocket !== 'undefined'\n    ) {\n      return { type: 'native', constructor: (global as any).WebSocket }\n    }\n\n    if (\n      typeof globalThis !== 'undefined' &&\n      typeof (globalThis as any).WebSocketPair !== 'undefined' &&\n      typeof globalThis.WebSocket === 'undefined'\n    ) {\n      return {\n        type: 'cloudflare',\n        error:\n          'Cloudflare Workers detected. WebSocket clients are not supported in Cloudflare Workers.',\n        workaround:\n          'Use Cloudflare Workers WebSocket API for server-side WebSocket handling, or deploy to a different runtime.',\n      }\n    }\n\n    if (\n      (typeof globalThis !== 'undefined' && (globalThis as any).EdgeRuntime) ||\n      (typeof navigator !== 'undefined' &&\n        navigator.userAgent?.includes('Vercel-Edge'))\n    ) {\n      return {\n        type: 'unsupported',\n        error:\n          'Edge runtime detected (Vercel Edge/Netlify Edge). WebSockets are not supported in edge functions.',\n        workaround:\n          'Use serverless functions or a different deployment target for WebSocket functionality.',\n      }\n    }\n\n    if (\n      typeof process !== 'undefined' &&\n      process.versions &&\n      process.versions.node\n    ) {\n      const nodeVersion = parseInt(process.versions.node.split('.')[0])\n      if (nodeVersion >= 22) {\n        try {\n          if (typeof globalThis.WebSocket !== 'undefined') {\n            return { type: 'native', constructor: globalThis.WebSocket }\n          }\n          const undici = this.dynamicRequire('undici')\n          if (undici && undici.WebSocket) {\n            return { type: 'native', constructor: undici.WebSocket }\n          }\n          throw new Error('undici not available')\n        } catch (err) {\n          return {\n            type: 'unsupported',\n            error: `Node.js ${nodeVersion} detected but native WebSocket not found.`,\n            workaround:\n              'Install the \"ws\" package or check your Node.js installation.',\n          }\n        }\n      }\n      try {\n        // Use dynamic require to work in both CJS and ESM environments\n        const ws = this.dynamicRequire('ws')\n        if (ws) {\n          return { type: 'ws', constructor: ws.WebSocket ?? ws }\n        }\n        throw new Error('ws package not available')\n      } catch (err) {\n        return {\n          type: 'unsupported',\n          error: `Node.js ${nodeVersion} detected without WebSocket support.`,\n          workaround: 'Install the \"ws\" package: npm install ws',\n        }\n      }\n    }\n\n    return {\n      type: 'unsupported',\n      error: 'Unknown JavaScript runtime without WebSocket support.',\n      workaround:\n        \"Ensure you're running in a supported environment (browser, Node.js, Deno) or provide a custom WebSocket implementation.\",\n    }\n  }\n\n  public static getWebSocketConstructor(): typeof WebSocket {\n    const env = this.detectEnvironment()\n    if (env.constructor) {\n      return env.constructor\n    }\n    let errorMessage =\n      env.error || 'WebSocket not supported in this environment.'\n    if (env.workaround) {\n      errorMessage += `\\n\\nSuggested solution: ${env.workaround}`\n    }\n    throw new Error(errorMessage)\n  }\n\n  public static createWebSocket(\n    url: string | URL,\n    protocols?: string | string[]\n  ): WebSocketLike {\n    const WS = this.getWebSocketConstructor()\n    return new WS(url, protocols)\n  }\n\n  public static isWebSocketSupported(): boolean {\n    try {\n      const env = this.detectEnvironment()\n      return env.type === 'native' || env.type === 'ws'\n    } catch {\n      return false\n    }\n  }\n}\n\nexport default WebSocketFactory\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}