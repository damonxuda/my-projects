{"ast":null,"code":"/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/export var REALTIME_PRESENCE_LISTEN_EVENTS;(function(REALTIME_PRESENCE_LISTEN_EVENTS){REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"]=\"sync\";REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"]=\"join\";REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"]=\"leave\";})(REALTIME_PRESENCE_LISTEN_EVENTS||(REALTIME_PRESENCE_LISTEN_EVENTS={}));export default class RealtimePresence{/**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */constructor(channel,opts){this.channel=channel;this.state={};this.pendingDiffs=[];this.joinRef=null;this.enabled=false;this.caller={onJoin:()=>{},onLeave:()=>{},onSync:()=>{}};const events=(opts===null||opts===void 0?void 0:opts.events)||{state:'presence_state',diff:'presence_diff'};this.channel._on(events.state,{},newState=>{const{onJoin,onLeave,onSync}=this.caller;this.joinRef=this.channel._joinRef();this.state=RealtimePresence.syncState(this.state,newState,onJoin,onLeave);this.pendingDiffs.forEach(diff=>{this.state=RealtimePresence.syncDiff(this.state,diff,onJoin,onLeave);});this.pendingDiffs=[];onSync();});this.channel._on(events.diff,{},diff=>{const{onJoin,onLeave,onSync}=this.caller;if(this.inPendingSyncState()){this.pendingDiffs.push(diff);}else{this.state=RealtimePresence.syncDiff(this.state,diff,onJoin,onLeave);onSync();}});this.onJoin((key,currentPresences,newPresences)=>{this.channel._trigger('presence',{event:'join',key,currentPresences,newPresences});});this.onLeave((key,currentPresences,leftPresences)=>{this.channel._trigger('presence',{event:'leave',key,currentPresences,leftPresences});});this.onSync(()=>{this.channel._trigger('presence',{event:'sync'});});}/**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */static syncState(currentState,newState,onJoin,onLeave){const state=this.cloneDeep(currentState);const transformedState=this.transformState(newState);const joins={};const leaves={};this.map(state,(key,presences)=>{if(!transformedState[key]){leaves[key]=presences;}});this.map(transformedState,(key,newPresences)=>{const currentPresences=state[key];if(currentPresences){const newPresenceRefs=newPresences.map(m=>m.presence_ref);const curPresenceRefs=currentPresences.map(m=>m.presence_ref);const joinedPresences=newPresences.filter(m=>curPresenceRefs.indexOf(m.presence_ref)<0);const leftPresences=currentPresences.filter(m=>newPresenceRefs.indexOf(m.presence_ref)<0);if(joinedPresences.length>0){joins[key]=joinedPresences;}if(leftPresences.length>0){leaves[key]=leftPresences;}}else{joins[key]=newPresences;}});return this.syncDiff(state,{joins,leaves},onJoin,onLeave);}/**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */static syncDiff(state,diff,onJoin,onLeave){const{joins,leaves}={joins:this.transformState(diff.joins),leaves:this.transformState(diff.leaves)};if(!onJoin){onJoin=()=>{};}if(!onLeave){onLeave=()=>{};}this.map(joins,(key,newPresences)=>{var _a;const currentPresences=(_a=state[key])!==null&&_a!==void 0?_a:[];state[key]=this.cloneDeep(newPresences);if(currentPresences.length>0){const joinedPresenceRefs=state[key].map(m=>m.presence_ref);const curPresences=currentPresences.filter(m=>joinedPresenceRefs.indexOf(m.presence_ref)<0);state[key].unshift(...curPresences);}onJoin(key,currentPresences,newPresences);});this.map(leaves,(key,leftPresences)=>{let currentPresences=state[key];if(!currentPresences)return;const presenceRefsToRemove=leftPresences.map(m=>m.presence_ref);currentPresences=currentPresences.filter(m=>presenceRefsToRemove.indexOf(m.presence_ref)<0);state[key]=currentPresences;onLeave(key,currentPresences,leftPresences);if(currentPresences.length===0)delete state[key];});return state;}/** @internal */static map(obj,func){return Object.getOwnPropertyNames(obj).map(key=>func(key,obj[key]));}/**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */static transformState(state){state=this.cloneDeep(state);return Object.getOwnPropertyNames(state).reduce((newState,key)=>{const presences=state[key];if('metas'in presences){newState[key]=presences.metas.map(presence=>{presence['presence_ref']=presence['phx_ref'];delete presence['phx_ref'];delete presence['phx_ref_prev'];return presence;});}else{newState[key]=presences;}return newState;},{});}/** @internal */static cloneDeep(obj){return JSON.parse(JSON.stringify(obj));}/** @internal */onJoin(callback){this.caller.onJoin=callback;}/** @internal */onLeave(callback){this.caller.onLeave=callback;}/** @internal */onSync(callback){this.caller.onSync=callback;}/** @internal */inPendingSyncState(){return!this.joinRef||this.joinRef!==this.channel._joinRef();}}","map":{"version":3,"names":["REALTIME_PRESENCE_LISTEN_EVENTS","RealtimePresence","constructor","channel","opts","state","pendingDiffs","joinRef","enabled","caller","onJoin","onLeave","onSync","events","diff","_on","newState","_joinRef","syncState","forEach","syncDiff","inPendingSyncState","push","key","currentPresences","newPresences","_trigger","event","leftPresences","currentState","cloneDeep","transformedState","transformState","joins","leaves","map","presences","newPresenceRefs","m","presence_ref","curPresenceRefs","joinedPresences","filter","indexOf","length","_a","joinedPresenceRefs","curPresences","unshift","presenceRefsToRemove","obj","func","Object","getOwnPropertyNames","reduce","metas","presence","JSON","parse","stringify","callback"],"sources":["/Users/damonxu/Documents/GitHub/my-projects/auth/node_modules/@supabase/realtime-js/src/RealtimePresence.ts"],"sourcesContent":["/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\n\nimport type {\n  PresenceOpts,\n  PresenceOnJoinCallback,\n  PresenceOnLeaveCallback,\n} from 'phoenix'\nimport type RealtimeChannel from './RealtimeChannel'\n\ntype Presence<T extends { [key: string]: any } = {}> = {\n  presence_ref: string\n} & T\n\nexport type RealtimePresenceState<T extends { [key: string]: any } = {}> = {\n  [key: string]: Presence<T>[]\n}\n\nexport type RealtimePresenceJoinPayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.JOIN}`\n  key: string\n  currentPresences: Presence<T>[]\n  newPresences: Presence<T>[]\n}\n\nexport type RealtimePresenceLeavePayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE}`\n  key: string\n  currentPresences: Presence<T>[]\n  leftPresences: Presence<T>[]\n}\n\nexport enum REALTIME_PRESENCE_LISTEN_EVENTS {\n  SYNC = 'sync',\n  JOIN = 'join',\n  LEAVE = 'leave',\n}\n\ntype PresenceDiff = {\n  joins: RealtimePresenceState\n  leaves: RealtimePresenceState\n}\n\ntype RawPresenceState = {\n  [key: string]: {\n    metas: {\n      phx_ref?: string\n      phx_ref_prev?: string\n      [key: string]: any\n    }[]\n  }\n}\n\ntype RawPresenceDiff = {\n  joins: RawPresenceState\n  leaves: RawPresenceState\n}\n\ntype PresenceChooser<T> = (key: string, presences: Presence[]) => T\n\nexport default class RealtimePresence {\n  state: RealtimePresenceState = {}\n  pendingDiffs: RawPresenceDiff[] = []\n  joinRef: string | null = null\n  enabled: boolean = false\n  caller: {\n    onJoin: PresenceOnJoinCallback\n    onLeave: PresenceOnLeaveCallback\n    onSync: () => void\n  } = {\n    onJoin: () => {},\n    onLeave: () => {},\n    onSync: () => {},\n  }\n\n  /**\n   * Initializes the Presence.\n   *\n   * @param channel - The RealtimeChannel\n   * @param opts - The options,\n   *        for example `{events: {state: 'state', diff: 'diff'}}`\n   */\n  constructor(public channel: RealtimeChannel, opts?: PresenceOpts) {\n    const events = opts?.events || {\n      state: 'presence_state',\n      diff: 'presence_diff',\n    }\n\n    this.channel._on(events.state, {}, (newState: RawPresenceState) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      this.joinRef = this.channel._joinRef()\n\n      this.state = RealtimePresence.syncState(\n        this.state,\n        newState,\n        onJoin,\n        onLeave\n      )\n\n      this.pendingDiffs.forEach((diff) => {\n        this.state = RealtimePresence.syncDiff(\n          this.state,\n          diff,\n          onJoin,\n          onLeave\n        )\n      })\n\n      this.pendingDiffs = []\n\n      onSync()\n    })\n\n    this.channel._on(events.diff, {}, (diff: RawPresenceDiff) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      if (this.inPendingSyncState()) {\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = RealtimePresence.syncDiff(\n          this.state,\n          diff,\n          onJoin,\n          onLeave\n        )\n\n        onSync()\n      }\n    })\n\n    this.onJoin((key, currentPresences, newPresences) => {\n      this.channel._trigger('presence', {\n        event: 'join',\n        key,\n        currentPresences,\n        newPresences,\n      })\n    })\n\n    this.onLeave((key, currentPresences, leftPresences) => {\n      this.channel._trigger('presence', {\n        event: 'leave',\n        key,\n        currentPresences,\n        leftPresences,\n      })\n    })\n\n    this.onSync(() => {\n      this.channel._trigger('presence', { event: 'sync' })\n    })\n  }\n\n  /**\n   * Used to sync the list of presences on the server with the\n   * client's state.\n   *\n   * An optional `onJoin` and `onLeave` callback can be provided to\n   * react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @internal\n   */\n  private static syncState(\n    currentState: RealtimePresenceState,\n    newState: RawPresenceState | RealtimePresenceState,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const state = this.cloneDeep(currentState)\n    const transformedState = this.transformState(newState)\n    const joins: RealtimePresenceState = {}\n    const leaves: RealtimePresenceState = {}\n\n    this.map(state, (key: string, presences: Presence[]) => {\n      if (!transformedState[key]) {\n        leaves[key] = presences\n      }\n    })\n\n    this.map(transformedState, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key]\n\n      if (currentPresences) {\n        const newPresenceRefs = newPresences.map(\n          (m: Presence) => m.presence_ref\n        )\n        const curPresenceRefs = currentPresences.map(\n          (m: Presence) => m.presence_ref\n        )\n        const joinedPresences: Presence[] = newPresences.filter(\n          (m: Presence) => curPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n        const leftPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => newPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        if (joinedPresences.length > 0) {\n          joins[key] = joinedPresences\n        }\n\n        if (leftPresences.length > 0) {\n          leaves[key] = leftPresences\n        }\n      } else {\n        joins[key] = newPresences\n      }\n    })\n\n    return this.syncDiff(state, { joins, leaves }, onJoin, onLeave)\n  }\n\n  /**\n   * Used to sync a diff of presence join and leave events from the\n   * server, as they happen.\n   *\n   * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n   * `onLeave` callbacks to react to a user joining or leaving from a\n   * device.\n   *\n   * @internal\n   */\n  private static syncDiff(\n    state: RealtimePresenceState,\n    diff: RawPresenceDiff | PresenceDiff,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const { joins, leaves } = {\n      joins: this.transformState(diff.joins),\n      leaves: this.transformState(diff.leaves),\n    }\n\n    if (!onJoin) {\n      onJoin = () => {}\n    }\n\n    if (!onLeave) {\n      onLeave = () => {}\n    }\n\n    this.map(joins, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key] ?? []\n      state[key] = this.cloneDeep(newPresences)\n\n      if (currentPresences.length > 0) {\n        const joinedPresenceRefs = state[key].map(\n          (m: Presence) => m.presence_ref\n        )\n        const curPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => joinedPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        state[key].unshift(...curPresences)\n      }\n\n      onJoin(key, currentPresences, newPresences)\n    })\n\n    this.map(leaves, (key, leftPresences: Presence[]) => {\n      let currentPresences: Presence[] = state[key]\n\n      if (!currentPresences) return\n\n      const presenceRefsToRemove = leftPresences.map(\n        (m: Presence) => m.presence_ref\n      )\n      currentPresences = currentPresences.filter(\n        (m: Presence) => presenceRefsToRemove.indexOf(m.presence_ref) < 0\n      )\n\n      state[key] = currentPresences\n\n      onLeave(key, currentPresences, leftPresences)\n\n      if (currentPresences.length === 0) delete state[key]\n    })\n\n    return state\n  }\n\n  /** @internal */\n  private static map<T = any>(\n    obj: RealtimePresenceState,\n    func: PresenceChooser<T>\n  ): T[] {\n    return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]))\n  }\n\n  /**\n   * Remove 'metas' key\n   * Change 'phx_ref' to 'presence_ref'\n   * Remove 'phx_ref' and 'phx_ref_prev'\n   *\n   * @example\n   * // returns {\n   *  abc123: [\n   *    { presence_ref: '2', user_id: 1 },\n   *    { presence_ref: '3', user_id: 2 }\n   *  ]\n   * }\n   * RealtimePresence.transformState({\n   *  abc123: {\n   *    metas: [\n   *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n   *      { phx_ref: '3', user_id: 2 }\n   *    ]\n   *  }\n   * })\n   *\n   * @internal\n   */\n  private static transformState(\n    state: RawPresenceState | RealtimePresenceState\n  ): RealtimePresenceState {\n    state = this.cloneDeep(state)\n\n    return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n      const presences = state[key]\n\n      if ('metas' in presences) {\n        newState[key] = presences.metas.map((presence) => {\n          presence['presence_ref'] = presence['phx_ref']\n\n          delete presence['phx_ref']\n          delete presence['phx_ref_prev']\n\n          return presence\n        }) as Presence[]\n      } else {\n        newState[key] = presences\n      }\n\n      return newState\n    }, {} as RealtimePresenceState)\n  }\n\n  /** @internal */\n  private static cloneDeep(obj: { [key: string]: any }) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n\n  /** @internal */\n  private onJoin(callback: PresenceOnJoinCallback): void {\n    this.caller.onJoin = callback\n  }\n\n  /** @internal */\n  private onLeave(callback: PresenceOnLeaveCallback): void {\n    this.caller.onLeave = callback\n  }\n\n  /** @internal */\n  private onSync(callback: () => void): void {\n    this.caller.onSync = callback\n  }\n\n  /** @internal */\n  private inPendingSyncState(): boolean {\n    return !this.joinRef || this.joinRef !== this.channel._joinRef()\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}