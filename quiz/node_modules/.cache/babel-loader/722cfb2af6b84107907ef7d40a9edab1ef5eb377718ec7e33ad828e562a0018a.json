{"ast":null,"code":"// src/services/supabaseClient.js\nimport{createClient}from'@supabase/supabase-js';/**\n * 创建Supabase客户端实例\n * @param {string} supabaseUrl - Supabase项目URL\n * @param {string} supabaseAnonKey - Supabase匿名密钥\n * @param {object} options - 额外的配置选项\n * @returns {object} Supabase客户端实例\n */export const createSupabaseClient=function(supabaseUrl,supabaseAnonKey){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(!supabaseUrl||!supabaseAnonKey){throw new Error('Supabase URL and Anonymous Key are required');}const defaultOptions={auth:{autoRefreshToken:true,persistSession:true,detectSessionInUrl:true},realtime:{params:{eventsPerSecond:10}},...options};console.log('✅ Supabase Client Created - URL:',supabaseUrl);return createClient(supabaseUrl,supabaseAnonKey,defaultOptions);};/**\n * 使用环境变量创建Supabase客户端\n * 需要在使用的项目中设置以下环境变量：\n * - REACT_APP_SUPABASE_URL\n * - REACT_APP_SUPABASE_ANON_KEY\n */export const createSupabaseClientFromEnv=function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const supabaseUrl=process.env.REACT_APP_SUPABASE_URL;const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY;if(!supabaseUrl||!supabaseAnonKey){throw new Error('Missing environment variables. Please set REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY');}return createSupabaseClient(supabaseUrl,supabaseAnonKey,options);};/**\n * 数据库表配置\n */export const SUPABASE_CONFIG={// Table names\ntables:{user_profiles:'user_profiles',questions:'questions',attempts:'attempts',tags:'tags',question_tags:'question_tags'},// Storage buckets\nbuckets:{images:'question-images'}};/**\n * Supabase Helper Functions\n * @param {object} supabaseClient - Supabase客户端实例\n */export const createSupabaseHelpers=supabaseClient=>({// Check if user is authenticated\nisAuthenticated:async()=>{const{data:{user}}=await supabaseClient.auth.getUser();return user!==null;},// Get current user\ngetCurrentUser:async()=>{const{data:{user}}=await supabaseClient.auth.getUser();return user;},// Sign out user\nsignOut:async()=>{const{error}=await supabaseClient.auth.signOut();return{error};}});","map":{"version":3,"names":["createClient","createSupabaseClient","supabaseUrl","supabaseAnonKey","options","arguments","length","undefined","Error","defaultOptions","auth","autoRefreshToken","persistSession","detectSessionInUrl","realtime","params","eventsPerSecond","console","log","createSupabaseClientFromEnv","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","SUPABASE_CONFIG","tables","user_profiles","questions","attempts","tags","question_tags","buckets","images","createSupabaseHelpers","supabaseClient","isAuthenticated","data","user","getUser","getCurrentUser","signOut","error"],"sources":["/Users/damonxu/Documents/GitHub/my-projects/auth/src/services/supabaseClient.js"],"sourcesContent":["// src/services/supabaseClient.js\nimport { createClient } from '@supabase/supabase-js';\n\n/**\n * 创建Supabase客户端实例\n * @param {string} supabaseUrl - Supabase项目URL\n * @param {string} supabaseAnonKey - Supabase匿名密钥\n * @param {object} options - 额外的配置选项\n * @returns {object} Supabase客户端实例\n */\nexport const createSupabaseClient = (supabaseUrl, supabaseAnonKey, options = {}) => {\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Supabase URL and Anonymous Key are required');\n  }\n\n  const defaultOptions = {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true,\n    },\n    realtime: {\n      params: {\n        eventsPerSecond: 10\n      }\n    },\n    ...options\n  };\n\n  console.log('✅ Supabase Client Created - URL:', supabaseUrl);\n  return createClient(supabaseUrl, supabaseAnonKey, defaultOptions);\n};\n\n/**\n * 使用环境变量创建Supabase客户端\n * 需要在使用的项目中设置以下环境变量：\n * - REACT_APP_SUPABASE_URL\n * - REACT_APP_SUPABASE_ANON_KEY\n */\nexport const createSupabaseClientFromEnv = (options = {}) => {\n  const supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\n  const supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error(\n      'Missing environment variables. Please set REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY'\n    );\n  }\n\n  return createSupabaseClient(supabaseUrl, supabaseAnonKey, options);\n};\n\n/**\n * 数据库表配置\n */\nexport const SUPABASE_CONFIG = {\n  // Table names\n  tables: {\n    user_profiles: 'user_profiles',\n    questions: 'questions',\n    attempts: 'attempts',\n    tags: 'tags',\n    question_tags: 'question_tags'\n  },\n  \n  // Storage buckets\n  buckets: {\n    images: 'question-images'\n  }\n};\n\n/**\n * Supabase Helper Functions\n * @param {object} supabaseClient - Supabase客户端实例\n */\nexport const createSupabaseHelpers = (supabaseClient) => ({\n  // Check if user is authenticated\n  isAuthenticated: async () => {\n    const { data: { user } } = await supabaseClient.auth.getUser();\n    return user !== null;\n  },\n  \n  // Get current user\n  getCurrentUser: async () => {\n    const { data: { user } } = await supabaseClient.auth.getUser();\n    return user;\n  },\n  \n  // Sign out user\n  signOut: async () => {\n    const { error } = await supabaseClient.auth.signOut();\n    return { error };\n  }\n});"],"mappings":"AAAA;AACA,OAASA,YAAY,KAAQ,uBAAuB,CAEpD;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,oBAAoB,CAAG,QAAAA,CAACC,WAAW,CAAEC,eAAe,CAAmB,IAAjB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC7E,GAAI,CAACH,WAAW,EAAI,CAACC,eAAe,CAAE,CACpC,KAAM,IAAI,CAAAK,KAAK,CAAC,6CAA6C,CAAC,CAChE,CAEA,KAAM,CAAAC,cAAc,CAAG,CACrBC,IAAI,CAAE,CACJC,gBAAgB,CAAE,IAAI,CACtBC,cAAc,CAAE,IAAI,CACpBC,kBAAkB,CAAE,IACtB,CAAC,CACDC,QAAQ,CAAE,CACRC,MAAM,CAAE,CACNC,eAAe,CAAE,EACnB,CACF,CAAC,CACD,GAAGZ,OACL,CAAC,CAEDa,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEhB,WAAW,CAAC,CAC5D,MAAO,CAAAF,YAAY,CAACE,WAAW,CAAEC,eAAe,CAAEM,cAAc,CAAC,CACnE,CAAC,CAED;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAU,2BAA2B,CAAG,QAAAA,CAAA,CAAkB,IAAjB,CAAAf,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACtD,KAAM,CAAAH,WAAW,CAAGkB,OAAO,CAACC,GAAG,CAACC,sBAAsB,CACtD,KAAM,CAAAnB,eAAe,CAAGiB,OAAO,CAACC,GAAG,CAACE,2BAA2B,CAE/D,GAAI,CAACrB,WAAW,EAAI,CAACC,eAAe,CAAE,CACpC,KAAM,IAAI,CAAAK,KAAK,CACb,kGACF,CAAC,CACH,CAEA,MAAO,CAAAP,oBAAoB,CAACC,WAAW,CAAEC,eAAe,CAAEC,OAAO,CAAC,CACpE,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAoB,eAAe,CAAG,CAC7B;AACAC,MAAM,CAAE,CACNC,aAAa,CAAE,eAAe,CAC9BC,SAAS,CAAE,WAAW,CACtBC,QAAQ,CAAE,UAAU,CACpBC,IAAI,CAAE,MAAM,CACZC,aAAa,CAAE,eACjB,CAAC,CAED;AACAC,OAAO,CAAE,CACPC,MAAM,CAAE,iBACV,CACF,CAAC,CAED;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,qBAAqB,CAAIC,cAAc,GAAM,CACxD;AACAC,eAAe,CAAE,KAAAA,CAAA,GAAY,CAC3B,KAAM,CAAEC,IAAI,CAAE,CAAEC,IAAK,CAAE,CAAC,CAAG,KAAM,CAAAH,cAAc,CAACxB,IAAI,CAAC4B,OAAO,CAAC,CAAC,CAC9D,MAAO,CAAAD,IAAI,GAAK,IAAI,CACtB,CAAC,CAED;AACAE,cAAc,CAAE,KAAAA,CAAA,GAAY,CAC1B,KAAM,CAAEH,IAAI,CAAE,CAAEC,IAAK,CAAE,CAAC,CAAG,KAAM,CAAAH,cAAc,CAACxB,IAAI,CAAC4B,OAAO,CAAC,CAAC,CAC9D,MAAO,CAAAD,IAAI,CACb,CAAC,CAED;AACAG,OAAO,CAAE,KAAAA,CAAA,GAAY,CACnB,KAAM,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAP,cAAc,CAACxB,IAAI,CAAC8B,OAAO,CAAC,CAAC,CACrD,MAAO,CAAEC,KAAM,CAAC,CAClB,CACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}