{"ast":null,"code":"// src/services/supabaseClient.js\nimport { createClient } from '@supabase/supabase-js';\n\n/**\n * 创建Supabase客户端实例\n * @param {string} supabaseUrl - Supabase项目URL\n * @param {string} supabaseAnonKey - Supabase匿名密钥\n * @param {object} options - 额外的配置选项\n * @returns {object} Supabase客户端实例\n */\nexport const createSupabaseClient = (supabaseUrl, supabaseAnonKey, options = {}) => {\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Supabase URL and Anonymous Key are required');\n  }\n  const defaultOptions = {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true\n    },\n    realtime: {\n      params: {\n        eventsPerSecond: 10\n      }\n    },\n    ...options\n  };\n  console.log('✅ Supabase Client Created - URL:', supabaseUrl);\n  return createClient(supabaseUrl, supabaseAnonKey, defaultOptions);\n};\n\n/**\n * 使用环境变量创建Supabase客户端\n * 需要在使用的项目中设置以下环境变量：\n * - REACT_APP_SUPABASE_URL\n * - REACT_APP_SUPABASE_ANON_KEY\n */\nexport const createSupabaseClientFromEnv = (options = {}) => {\n  const supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\n  const supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Missing environment variables. Please set REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY');\n  }\n  return createSupabaseClient(supabaseUrl, supabaseAnonKey, options);\n};\n\n/**\n * 数据库表配置\n */\nexport const SUPABASE_CONFIG = {\n  // Table names\n  tables: {\n    user_profiles: 'user_profiles',\n    questions: 'questions',\n    attempts: 'attempts',\n    tags: 'tags',\n    question_tags: 'question_tags'\n  },\n  // Storage buckets\n  buckets: {\n    images: 'question-images'\n  }\n};\n\n/**\n * Supabase Helper Functions\n * @param {object} supabaseClient - Supabase客户端实例\n */\nexport const createSupabaseHelpers = supabaseClient => ({\n  // Check if user is authenticated\n  isAuthenticated: async () => {\n    const {\n      data: {\n        user\n      }\n    } = await supabaseClient.auth.getUser();\n    return user !== null;\n  },\n  // Get current user\n  getCurrentUser: async () => {\n    const {\n      data: {\n        user\n      }\n    } = await supabaseClient.auth.getUser();\n    return user;\n  },\n  // Sign out user\n  signOut: async () => {\n    const {\n      error\n    } = await supabaseClient.auth.signOut();\n    return {\n      error\n    };\n  }\n});","map":{"version":3,"names":["createClient","createSupabaseClient","supabaseUrl","supabaseAnonKey","options","Error","defaultOptions","auth","autoRefreshToken","persistSession","detectSessionInUrl","realtime","params","eventsPerSecond","console","log","createSupabaseClientFromEnv","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","SUPABASE_CONFIG","tables","user_profiles","questions","attempts","tags","question_tags","buckets","images","createSupabaseHelpers","supabaseClient","isAuthenticated","data","user","getUser","getCurrentUser","signOut","error"],"sources":["/Users/damonxu/Documents/GitHub/my-projects/auth/src/services/supabaseClient.js"],"sourcesContent":["// src/services/supabaseClient.js\nimport { createClient } from '@supabase/supabase-js';\n\n/**\n * 创建Supabase客户端实例\n * @param {string} supabaseUrl - Supabase项目URL\n * @param {string} supabaseAnonKey - Supabase匿名密钥\n * @param {object} options - 额外的配置选项\n * @returns {object} Supabase客户端实例\n */\nexport const createSupabaseClient = (supabaseUrl, supabaseAnonKey, options = {}) => {\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Supabase URL and Anonymous Key are required');\n  }\n\n  const defaultOptions = {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true,\n    },\n    realtime: {\n      params: {\n        eventsPerSecond: 10\n      }\n    },\n    ...options\n  };\n\n  console.log('✅ Supabase Client Created - URL:', supabaseUrl);\n  return createClient(supabaseUrl, supabaseAnonKey, defaultOptions);\n};\n\n/**\n * 使用环境变量创建Supabase客户端\n * 需要在使用的项目中设置以下环境变量：\n * - REACT_APP_SUPABASE_URL\n * - REACT_APP_SUPABASE_ANON_KEY\n */\nexport const createSupabaseClientFromEnv = (options = {}) => {\n  const supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\n  const supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error(\n      'Missing environment variables. Please set REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY'\n    );\n  }\n\n  return createSupabaseClient(supabaseUrl, supabaseAnonKey, options);\n};\n\n/**\n * 数据库表配置\n */\nexport const SUPABASE_CONFIG = {\n  // Table names\n  tables: {\n    user_profiles: 'user_profiles',\n    questions: 'questions',\n    attempts: 'attempts',\n    tags: 'tags',\n    question_tags: 'question_tags'\n  },\n  \n  // Storage buckets\n  buckets: {\n    images: 'question-images'\n  }\n};\n\n/**\n * Supabase Helper Functions\n * @param {object} supabaseClient - Supabase客户端实例\n */\nexport const createSupabaseHelpers = (supabaseClient) => ({\n  // Check if user is authenticated\n  isAuthenticated: async () => {\n    const { data: { user } } = await supabaseClient.auth.getUser();\n    return user !== null;\n  },\n  \n  // Get current user\n  getCurrentUser: async () => {\n    const { data: { user } } = await supabaseClient.auth.getUser();\n    return user;\n  },\n  \n  // Sign out user\n  signOut: async () => {\n    const { error } = await supabaseClient.auth.signOut();\n    return { error };\n  }\n});"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,uBAAuB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,GAAGA,CAACC,WAAW,EAAEC,eAAe,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAClF,IAAI,CAACF,WAAW,IAAI,CAACC,eAAe,EAAE;IACpC,MAAM,IAAIE,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,MAAMC,cAAc,GAAG;IACrBC,IAAI,EAAE;MACJC,gBAAgB,EAAE,IAAI;MACtBC,cAAc,EAAE,IAAI;MACpBC,kBAAkB,EAAE;IACtB,CAAC;IACDC,QAAQ,EAAE;MACRC,MAAM,EAAE;QACNC,eAAe,EAAE;MACnB;IACF,CAAC;IACD,GAAGT;EACL,CAAC;EAEDU,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEb,WAAW,CAAC;EAC5D,OAAOF,YAAY,CAACE,WAAW,EAAEC,eAAe,EAAEG,cAAc,CAAC;AACnE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMU,2BAA2B,GAAGA,CAACZ,OAAO,GAAG,CAAC,CAAC,KAAK;EAC3D,MAAMF,WAAW,GAAGe,OAAO,CAACC,GAAG,CAACC,sBAAsB;EACtD,MAAMhB,eAAe,GAAGc,OAAO,CAACC,GAAG,CAACE,2BAA2B;EAE/D,IAAI,CAAClB,WAAW,IAAI,CAACC,eAAe,EAAE;IACpC,MAAM,IAAIE,KAAK,CACb,kGACF,CAAC;EACH;EAEA,OAAOJ,oBAAoB,CAACC,WAAW,EAAEC,eAAe,EAAEC,OAAO,CAAC;AACpE,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMiB,eAAe,GAAG;EAC7B;EACAC,MAAM,EAAE;IACNC,aAAa,EAAE,eAAe;IAC9BC,SAAS,EAAE,WAAW;IACtBC,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,MAAM;IACZC,aAAa,EAAE;EACjB,CAAC;EAED;EACAC,OAAO,EAAE;IACPC,MAAM,EAAE;EACV;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,qBAAqB,GAAIC,cAAc,KAAM;EACxD;EACAC,eAAe,EAAE,MAAAA,CAAA,KAAY;IAC3B,MAAM;MAAEC,IAAI,EAAE;QAAEC;MAAK;IAAE,CAAC,GAAG,MAAMH,cAAc,CAACxB,IAAI,CAAC4B,OAAO,CAAC,CAAC;IAC9D,OAAOD,IAAI,KAAK,IAAI;EACtB,CAAC;EAED;EACAE,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,MAAM;MAAEH,IAAI,EAAE;QAAEC;MAAK;IAAE,CAAC,GAAG,MAAMH,cAAc,CAACxB,IAAI,CAAC4B,OAAO,CAAC,CAAC;IAC9D,OAAOD,IAAI;EACb,CAAC;EAED;EACAG,OAAO,EAAE,MAAAA,CAAA,KAAY;IACnB,MAAM;MAAEC;IAAM,CAAC,GAAG,MAAMP,cAAc,CAACxB,IAAI,CAAC8B,OAAO,CAAC,CAAC;IACrD,OAAO;MAAEC;IAAM,CAAC;EAClB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}