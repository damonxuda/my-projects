{"ast":null,"code":"/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */export function memoryLocalStorageAdapter(){let store=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return{getItem:key=>{return store[key]||null;},setItem:(key,value)=>{store[key]=value;},removeItem:key=>{delete store[key];}};}","map":{"version":3,"names":["memoryLocalStorageAdapter","store","arguments","length","undefined","getItem","key","setItem","value","removeItem"],"sources":["/Users/damonxu/Documents/GitHub/my-projects/auth/node_modules/@supabase/auth-js/src/lib/local-storage.ts"],"sourcesContent":["import { SupportedStorage } from './types'\n\n/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter(store: { [key: string]: string } = {}): SupportedStorage {\n  return {\n    getItem: (key) => {\n      return store[key] || null\n    },\n\n    setItem: (key, value) => {\n      store[key] = value\n    },\n\n    removeItem: (key) => {\n      delete store[key]\n    },\n  }\n}\n"],"mappings":"AAEA;;;GAIA,MAAM,SAAU,CAAAA,yBAAyBA,CAAA,CAAsC,IAArC,CAAAC,KAAA,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAmC,EAAE,CAC7E,MAAO,CACLG,OAAO,CAAGC,GAAG,EAAI,CACf,MAAO,CAAAL,KAAK,CAACK,GAAG,CAAC,EAAI,IAAI,CAC3B,CAAC,CAEDC,OAAO,CAAEA,CAACD,GAAG,CAAEE,KAAK,GAAI,CACtBP,KAAK,CAACK,GAAG,CAAC,CAAGE,KAAK,CACpB,CAAC,CAEDC,UAAU,CAAGH,GAAG,EAAI,CAClB,MAAO,CAAAL,KAAK,CAACK,GAAG,CAAC,CACnB,C,CACD,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}