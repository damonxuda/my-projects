{"ast":null,"code":"var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator[\"throw\"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};import{resolveFetch}from'./helper';import{FunctionsFetchError,FunctionsHttpError,FunctionsRelayError,FunctionRegion}from'./types';export class FunctionsClient{constructor(url){let{headers={},customFetch,region=FunctionRegion.Any}=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};this.url=url;this.headers=headers;this.region=region;this.fetch=resolveFetch(customFetch);}/**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */setAuth(token){this.headers.Authorization=\"Bearer \".concat(token);}/**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */invoke(functionName){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _a;return __awaiter(this,void 0,void 0,function*(){try{const{headers,method,body:functionArgs}=options;let _headers={};let{region}=options;if(!region){region=this.region;}// Add region as query parameter using URL API\nconst url=new URL(\"\".concat(this.url,\"/\").concat(functionName));if(region&&region!=='any'){_headers['x-region']=region;url.searchParams.set('forceFunctionRegion',region);}let body;if(functionArgs&&(headers&&!Object.prototype.hasOwnProperty.call(headers,'Content-Type')||!headers)){if(typeof Blob!=='undefined'&&functionArgs instanceof Blob||functionArgs instanceof ArrayBuffer){// will work for File as File inherits Blob\n// also works for ArrayBuffer as it is the same underlying structure as a Blob\n_headers['Content-Type']='application/octet-stream';body=functionArgs;}else if(typeof functionArgs==='string'){// plain string\n_headers['Content-Type']='text/plain';body=functionArgs;}else if(typeof FormData!=='undefined'&&functionArgs instanceof FormData){// don't set content-type headers\n// Request will automatically add the right boundary value\nbody=functionArgs;}else{// default, assume this is JSON\n_headers['Content-Type']='application/json';body=JSON.stringify(functionArgs);}}const response=yield this.fetch(url.toString(),{method:method||'POST',// headers priority is (high to low):\n// 1. invoke-level headers\n// 2. client-level headers\n// 3. default Content-Type header\nheaders:Object.assign(Object.assign(Object.assign({},_headers),this.headers),headers),body}).catch(fetchError=>{throw new FunctionsFetchError(fetchError);});const isRelayError=response.headers.get('x-relay-error');if(isRelayError&&isRelayError==='true'){throw new FunctionsRelayError(response);}if(!response.ok){throw new FunctionsHttpError(response);}let responseType=((_a=response.headers.get('Content-Type'))!==null&&_a!==void 0?_a:'text/plain').split(';')[0].trim();let data;if(responseType==='application/json'){data=yield response.json();}else if(responseType==='application/octet-stream'){data=yield response.blob();}else if(responseType==='text/event-stream'){data=response;}else if(responseType==='multipart/form-data'){data=yield response.formData();}else{// default to text\ndata=yield response.text();}return{data,error:null,response};}catch(error){return{data:null,error,response:error instanceof FunctionsHttpError||error instanceof FunctionsRelayError?error.context:undefined};}});}}","map":{"version":3,"names":["resolveFetch","FunctionsFetchError","FunctionsHttpError","FunctionsRelayError","FunctionRegion","FunctionsClient","constructor","url","headers","customFetch","region","Any","arguments","length","undefined","fetch","setAuth","token","Authorization","concat","invoke","functionName","options","method","body","functionArgs","_headers","URL","searchParams","set","Object","prototype","hasOwnProperty","call","Blob","ArrayBuffer","FormData","JSON","stringify","response","toString","assign","catch","fetchError","isRelayError","get","ok","responseType","_a","split","trim","data","json","blob","formData","text","error","context"],"sources":["/Users/damonxu/Documents/GitHub/my-projects/auth/node_modules/@supabase/functions-js/src/FunctionsClient.ts"],"sourcesContent":["import { resolveFetch } from './helper'\nimport {\n  Fetch,\n  FunctionsFetchError,\n  FunctionsHttpError,\n  FunctionsRelayError,\n  FunctionsResponse,\n  FunctionInvokeOptions,\n  FunctionRegion,\n} from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected region: FunctionRegion\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n      region = FunctionRegion.Any,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n      region?: FunctionRegion\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.region = region\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - The name of the Function to invoke.\n   * @param options - Options for invoking the Function.\n   */\n  async invoke<T = any>(\n    functionName: string,\n    options: FunctionInvokeOptions = {}\n  ): Promise<FunctionsResponse<T>> {\n    try {\n      const { headers, method, body: functionArgs } = options\n      let _headers: Record<string, string> = {}\n      let { region } = options\n      if (!region) {\n        region = this.region\n      }\n      // Add region as query parameter using URL API\n      const url = new URL(`${this.url}/${functionName}`)\n      if (region && region !== 'any') {\n        _headers['x-region'] = region\n        url.searchParams.set('forceFunctionRegion', region)\n      }\n      let body: any\n      if (\n        functionArgs &&\n        ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)\n      ) {\n        if (\n          (typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n          functionArgs instanceof ArrayBuffer\n        ) {\n          // will work for File as File inherits Blob\n          // also works for ArrayBuffer as it is the same underlying structure as a Blob\n          _headers['Content-Type'] = 'application/octet-stream'\n          body = functionArgs\n        } else if (typeof functionArgs === 'string') {\n          // plain string\n          _headers['Content-Type'] = 'text/plain'\n          body = functionArgs\n        } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n          // don't set content-type headers\n          // Request will automatically add the right boundary value\n          body = functionArgs\n        } else {\n          // default, assume this is JSON\n          _headers['Content-Type'] = 'application/json'\n          body = JSON.stringify(functionArgs)\n        }\n      }\n\n      const response = await this.fetch(url.toString(), {\n        method: method || 'POST',\n        // headers priority is (high to low):\n        // 1. invoke-level headers\n        // 2. client-level headers\n        // 3. default Content-Type header\n        headers: { ..._headers, ...this.headers, ...headers },\n        body,\n      }).catch((fetchError) => {\n        throw new FunctionsFetchError(fetchError)\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        throw new FunctionsRelayError(response)\n      }\n\n      if (!response.ok) {\n        throw new FunctionsHttpError(response)\n      }\n\n      let responseType = (response.headers.get('Content-Type') ?? 'text/plain').split(';')[0].trim()\n      let data: any\n      if (responseType === 'application/json') {\n        data = await response.json()\n      } else if (responseType === 'application/octet-stream') {\n        data = await response.blob()\n      } else if (responseType === 'text/event-stream') {\n        data = response\n      } else if (responseType === 'multipart/form-data') {\n        data = await response.formData()\n      } else {\n        // default to text\n        data = await response.text()\n      }\n\n      return { data, error: null, response }\n    } catch (error) {\n      return {\n        data: null,\n        error,\n        response:\n          error instanceof FunctionsHttpError || error instanceof FunctionsRelayError\n            ? error.context\n            : undefined,\n      }\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}